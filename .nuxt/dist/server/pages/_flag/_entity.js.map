{"version":3,"file":"pages/_flag/_entity.js","sources":["webpack:///./components/Entity.vue?6989","webpack:///./components/Entity.vue","webpack:///./components/Entity.vue?104d","webpack:///./components/Entity.vue?7ae9","webpack:///./pages/_flag/_entity.vue?1f6b","webpack:///./pages/_flag/_entity.vue?ce3e","webpack:///./pages/_flag/_entity.vue?704c","webpack:///./pages/_flag/_entity.vue","webpack:///./pages/_flag/_entity.vue?302b","webpack:///./pages/_flag/_entity.vue?572a"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mb-1\"},[_vm._ssrNode(\"<div class=\\\"flex mb-1 items-center\\\" data-v-7ef5a7ea>\",\"</div>\",[_vm._ssrNode(\"<div class=\\\"flex items-center flex-col leading-none w-5 h-5 cursor-pointer\\\" data-v-7ef5a7ea><span data-v-7ef5a7ea>\"+_vm._ssrEscape(_vm._s(_vm.expanded || _vm.entity.taxonomy !== 'species' ? '-' : '+'))+\"</span></div> <div class=\\\"w-5 mx-2\\\" data-v-7ef5a7ea>\"+((_vm.entity.media)?(\"<img\"+(_vm._ssrAttr(\"src\",_vm.entity.media.sizes['thumb_24_24']))+\" alt class=\\\"rounded\\\" data-v-7ef5a7ea>\"):(\"<div class=\\\"border p-1\\\" data-v-7ef5a7ea><img src=\\\"/plant.svg\\\" alt data-v-7ef5a7ea></div>\"))+\"</div> <div class=\\\"text-xs px-2 bg-green-500 mr-2 rounded text-white\\\" data-v-7ef5a7ea><span data-v-7ef5a7ea>\"+_vm._ssrEscape(_vm._s(_vm.entity.parent ? 'sub' : '')+_vm._s(_vm.entity.taxonomy))+\"</span></div> \"),_vm._ssrNode(\"<div class=\\\"flex-1\\\" data-v-7ef5a7ea>\",\"</div>\",[_vm._ssrNode(\"<h4 class=\\\"font-bold text-sm\\\" data-v-7ef5a7ea>\",\"</h4>\",[_c('n-link',{attrs:{\"to\":(\"/\" + (_vm.entity.taxonomy) + \"/\" + (_vm.entity.term.slug))}},[_vm._v(_vm._s(_vm.entity.term.title))])],1)])],2),_vm._ssrNode(\" \"),_vm._l((_vm.children),function(e,i){return _c('entity',{key:e.id,staticClass:\"ml-8\",attrs:{\"allow-expand\":\"\",\"entity\":e}})})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst SCHEMAS = [\"phylum\", \"class\", \"order\", \"family\", \"genera\", \"species\"]\nexport default {\n    name: \"Entity\",\n    props: {\n        entity: Object,\n        allowExpand: {\n            default: false,\n            type: Boolean\n        }\n    },\n    data() {\n        return {\n            expanded: this.allowExpand || !this.$route.params.flag ? false : this.entity.taxonomy !== this.$route.params.flag,\n            children: []\n        }\n    },\n    methods: {\n        async expand(tax) {\n            if (!this.expanded) {\n                let index = SCHEMAS.indexOf(tax ? tax : this.entity.taxonomy) + 1;\n                if (index < SCHEMAS.length) {\n                    let data = await this.$axios.$post('/graph/', {\n                        query: [\n                            {\n                                q: 'term_list',\n                                p: {\n                                    related: this.entity.id,\n                                    page_size: 20,\n                                    taxonomy: SCHEMAS[index],\n                                    reverse: false\n                                },\n                                s: [\"results\"],\n                                o: 'term_list'\n                            }]\n                    }, {\n                        params: {\n                            force: this.$route.query.force,\n                            host: \"9plant.com\"\n                        }\n                    })\n                    this.children = data['term_list']['results']\n                    if (this.children.length === 0) {\n                        await this.expand(SCHEMAS[index])\n                    }\n                    this.expanded = true\n                }\n            }\n        }\n    }\n}\n","import mod from \"-!../node_modules/babel-loader/lib/index.js??ref--2-0!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Entity.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js??ref--2-0!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Entity.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Entity.vue?vue&type=template&id=7ef5a7ea&scoped=true&\"\nimport script from \"./Entity.vue?vue&type=script&lang=js&\"\nexport * from \"./Entity.vue?vue&type=script&lang=js&\"\nfunction injectStyles (context) {\n  \n  \n}\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  \"7ef5a7ea\",\n  \"0d47ea0c\"\n  \n)\n\nexport default component.exports\n\n/* nuxt-component-imports */\ninstallComponents(component, {Entity: require('/Users/apple/Desktop/OpenSource/cms_plantgenealogy/components/Entity.vue').default})\n","// Exports\nmodule.exports = {};\n","export * from \"-!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-0!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-1!../../node_modules/sass-loader/dist/cjs.js??ref--7-oneOf-1-2!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./_entity.vue?vue&type=style&index=0&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._ssrNode(\"<header class=\\\"py-2\\\">\",\"</header>\",[_vm._ssrNode(\"<div class=\\\"container px-4 md:w-2/5 mx-auto flex items-center\\\">\",\"</div>\",[_c('n-link',{staticClass:\"flex\",attrs:{\"to\":\"/\"}},[_c('img',{staticClass:\"w-6 h-6 mr-2\",attrs:{\"src\":\"/logo.svg\",\"alt\":\"Plant Genealogy\"}}),_vm._v(\" \"),_c('span',{staticClass:\"font-bold text-xl\"},[_vm._v(\"Plantae.\")]),_vm._v(\" \"),_c('small',{staticClass:\"text-xs\"},[_vm._v(\"link\")])])],1)]),_vm._ssrNode(\" \"),_vm._ssrNode(\"<main class=\\\"container md:w-2/5 mx-auto p-4\\\">\",\"</main>\",[_vm._ssrNode(((_vm.entity)?(\"<div class=\\\"mb-2 border p-4 flex items-center\\\"><div class=\\\"w-32 mr-4\\\">\"+((_vm.entity.media)?(\"<img\"+(_vm._ssrAttr(\"src\",_vm.entity.media.sizes['thumb_247_247']))+\" alt class=\\\"rounded\\\">\"):(\"<img src=\\\"/plant.svg\\\" alt>\"))+\"</div> \"+((_vm.entity.term)?(\"<div class=\\\"flex-1\\\"><h1 class=\\\"text-2xl font-bold\\\">\"+_vm._ssrEscape(_vm._s(_vm.entity.term.title))+\"</h1> <p class=\\\"text-gray-600 text-sm\\\">\"+_vm._ssrEscape(_vm._s(_vm.entity.description))+\"</p></div>\"):\"<!---->\")+\"</div>\"):(\"<div class=\\\"mb-2\\\"><label><input type=\\\"text\\\" placeholder=\\\"Search species\\\"\"+(_vm._ssrAttr(\"value\",(_vm.search)))+\" class=\\\"border p-2 px-4 w-full\\\"></label></div>\"))+\" \"),_vm._ssrNode(\"<div class=\\\"mb-2 border p-4 bg-yellow-100\\\">\",\"</div>\",[_vm._ssrNode(\"<h4 class=\\\"mb-2 text-sm font-bold text-green-700\\\">\"+_vm._ssrEscape(_vm._s(_vm.entity ? 'Genealogy' : 'Phylum'))+\"</h4> \"),_vm._l((_vm.flat_entities),function(e,i){return (!(e.options && e.options['is_subversion']))?_c('entity',{key:e.id,class:_vm.entity ? (\"ml-\" + (8 * e.order)) : undefined,attrs:{\"entity\":e}}):_vm._e()})],2),_vm._ssrNode(\" \"),(_vm.end_flag)?_vm._ssrNode(\"<div class=\\\"mb-2 border p-4\\\">\",\"</div>\",[_vm._ssrNode(\"<h4 class=\\\"mb-2 text-sm font-bold text-green-700 capitalize\\\">\"+_vm._ssrEscape(_vm._s(_vm.end_flag))+\"</h4> \"),_vm._l((_vm.child.filter(function (x) { return x.taxonomy === _vm.end_flag; })),function(e,i){return _c('entity',{key:e.id,attrs:{\"entity\":e}})})],2):_vm._e()],2),_vm._ssrNode(\" <footer class=\\\"container md:w-2/5 p-4 mx-auto\\\"><div class=\\\"items-center flex\\\"><div class=\\\"text-sm uppercase\\\"><p>plantae.link Â© 2021</p></div> <div class=\\\"flex ml-auto\\\"><a target=\\\"_blank\\\" href=\\\"https://plantae.link/sitemap_index.xml\\\" class=\\\"cursor-pointer p-2\\\"><span class=\\\"stroke-current\\\"><svg viewBox=\\\"0 0 24 24\\\" fill=\\\"true\\\" class=\\\"w-4 h-4\\\"><path d=\\\"M3,3H9V7H3V3M15,10H21V14H15V10M15,17H21V21H15V17M13,13H7V18H13V20H7L5,20V9H7V11H13V13Z\\\" stroke-width=\\\"0\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"></path></svg></span></a></div></div></footer>\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Entity from \"@/components/Entity\";\nimport {debounce, uniq} from \"lodash\";\n\nexport default {\n    name: \"EntityDetail\",\n    components: {Entity},\n    data() {\n        return {\n            schemas: [\"phylum\", \"class\", \"order\", \"family\", \"genus\", \"species\"],\n            entity: null,\n            related: [],\n            child: [],\n            next_flag: 6,\n            search: null,\n            loading: false,\n            end_flag: null\n        }\n    },\n    head() {\n        let description = \"Plantae.Link\"\n        if (this.entity && this.entity.term) {\n            description = this.entity.description ? this.entity.description : `${this.entity.term.title} Genealogy`\n        }\n        return {\n            title: this.entity && this.entity.term ? this.entity.term.title : \"Plantae.Link\",\n            meta: [\n                {\n                    hid: 'og:title',\n                    name: 'og:title',\n                    content: this.entity && this.entity.term ? this.entity.term.title : \"Plantae.Link\"\n                },\n                {\n                    hid: 'description',\n                    name: 'description',\n                    content: description\n                },\n                {\n                    hid: 'og:description',\n                    name: 'og:description',\n                    content: description\n                },\n                {\n                    hid: 'og:url',\n                    name: 'og:url',\n                    content: `https://plantae.link/${this.$route.path}`\n                },\n                {\n                    hid: 'og:type',\n                    name: 'og:type',\n                    content: `article`\n                },\n                ...this.entity && this.entity.term && this.entity.media ? [{\n                    hid: 'og:image',\n                    name: 'og:image',\n                    content: this.entity.media.sizes['full_size']\n                }] : []\n            ]\n        }\n    },\n    computed: {\n        flat_entities() {\n            let entities = [\n                ...this.related.filter(x => this.schemas.includes(x.taxonomy)),\n                ...this.entity ? [this.entity] : []\n            ];\n            entities.forEach(e => e.order = this.schemas.indexOf(e.taxonomy))\n            entities = entities.filter((thing, index, self) =>\n                index === self.findIndex((t) => (\n                    t.id === thing.id\n                )))\n            entities.sort(function (a, b) {\n                return a['order'] === b['order'] ? 0 : +(a['order'] > b['order']) || -1;\n            })\n            return entities;\n        },\n    },\n    async fetch() {\n        this.loading = true;\n        let {flag, entity} = this.$route.params;\n        if (flag) {\n            let index = this.schemas.indexOf(flag)\n            if (index >= 0 && index < this.schemas.length - 1) {\n                this.next_flag = index + 1\n            }\n        }\n        if (!flag) {\n            flag = \"phylum\"\n        }\n        let index = this.schemas.indexOf(flag);\n        this.end_flag = this.schemas[index + 1];\n        let flags = [\n            {\n                q: 'term_list',\n                p: {\n                    related_taxonomy: entity ? flag : undefined,\n                    related_term: entity,\n                    page_size: 20,\n                    taxonomy: entity ? undefined : flag,\n                    reverse: true,\n                    search: this.search\n                },\n                s: [\"results\"],\n                o: 'term_list'\n            },\n            {\n                q: 'term_detail',\n                p: {\n                    taxonomy: flag,\n                    term: entity\n                },\n                s: [\"id\", \"term\", \"description\", \"media\", \"taxonomy\"],\n                o: 'term_detail'\n            },\n            ...entity ? [{\n                q: 'term_list',\n                p: {\n                    taxonomy: this.schemas[index],\n                    related_taxonomy: flag,\n                    related_term: entity,\n                    page_size: 500,\n                    reverse: false\n                },\n                s: [\"results\"],\n                o: 'term_child_0'\n            }] : [],\n            ...entity && this.end_flag ? [{\n                q: 'term_list',\n                p: {\n                    taxonomy: this.end_flag,\n                    related_taxonomy: flag,\n                    related_term: entity,\n                    page_size: 500,\n                    reverse: false\n                },\n                s: [\"results\"],\n                o: 'term_child'\n            }] : [],\n        ]\n        let data = await this.$axios.$post('/graph/', {\n            query: flags\n        }, {\n            params: {\n                force: this.$route.query.force,\n                host: \"9plant.com\"\n            }\n        })\n        this.entity = data['term_detail']\n        this.related = data['term_list']['results']\n        this.related = this.related.concat(data['term_child_0'] ? data['term_child_0']['results'] : [])\n        this.child = data['term_child'] ? data['term_child']['results'] : [];\n        this.loading = false;\n    },\n    methods: {\n        except(description) {\n            if (description) {\n                return description.replace(/\\n/g, \" \").replace(/^(.{120}[^\\s]*).*/, \"$1\");\n            } else {\n                return null\n            }\n        },\n        handleSearch: debounce(function () {\n            if (process.client) {\n                this.$fetch();\n            }\n        }, 800)\n    }\n}\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./_entity.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./_entity.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./_entity.vue?vue&type=template&id=3f8abe08&\"\nimport script from \"./_entity.vue?vue&type=script&lang=js&\"\nexport * from \"./_entity.vue?vue&type=script&lang=js&\"\nfunction injectStyles (context) {\n  \n  var style0 = require(\"./_entity.vue?vue&type=style&index=0&lang=scss&\")\nif (style0.__inject__) style0.__inject__(context)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  \"0bd3a5de\"\n  \n)\n\nexport default component.exports\n\n/* nuxt-component-imports */\ninstallComponents(component, {Entity: require('/Users/apple/Desktop/OpenSource/cms_plantgenealogy/components/Entity.vue').default})\n"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AATA;AAFA;AAcA;AACA;AACA;AAFA;AADA;AAMA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAhCA;AAfA;;AC3BA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxBA;AACA;;;;;;;;;ACDA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AA5BA;AAmCA;AACA;AAAA;AACA;AACA;AAIA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAhBA;AACA;AAgBA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAXA;AAcA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAVA;AAaA;AACA;AADA;AAGA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA,mBAEA;AACA;AAZA;AArJA;;AChEA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}